// This file was generated by json2swift. https://github.com/ijoshsmith/json2swift

import Foundation

// MARK: - DataClass
class UserLogin: Codable {
    var profileImg: String
    let contactNo, deviceToken, id: String
    let isOnline: Bool
    let token, language, userBio: String
    let location: Location
    let email : String
    let isSocial: Bool
    let rewardImage: String?
    var displayName, userName: String
    
    enum CodingKeys: String, CodingKey {
        case contactNo = "contact_no"
        case deviceToken
        case id = "_id"
        case profileImg = "profile_img"
        case isOnline, token
        case userName = "user_name"
        case language, userBio, location, email, displayName, isSocial, rewardImage
    }
    
    init(contactNo: String, deviceToken: String, id: String, profileImg: String, isOnline: Bool, token: String, userName: String, language: String, userBio: String, location: Location, email: String, displayName: String, isSocial: Bool, rewardImage: String?) {
        self.contactNo = contactNo
        self.deviceToken = deviceToken
        self.id = id
        self.profileImg = profileImg
        self.isOnline = isOnline
        self.token = token
        self.userName = userName
        self.language = language
        self.userBio = userBio
        self.location = location
        self.email = email
        self.displayName = displayName
        self.isSocial = isSocial
        self.rewardImage = rewardImage
    }
    
    class func updatedData(withDictionary response: JSONDictionary) -> UserLogin {
        var location : Location!
        
        let contactNo = response["contact_no"] as? String ?? ""
        let deviceToken = response["deviceToken"] as? String ?? ""
        let id = response["_id"] as? String ?? ""
        let profileImg = response["profile_img"] as? String ?? ""
        let isOnline = response["isOnline"] as? Bool ?? false
        let token = response["token"] as? String ?? ""
        let userName = response["user_name"] as? String ?? ""
        let language = response["language"] as? String ?? ""
        let userBio = response["userBio"] as? String ?? ""
        if let locationData = response["location"] as? JSONDictionary {
            location = Location.init(type: locationData["type"] as? String ?? "", coordinates: locationData["type"] as? [Double] ?? [])
        }
        let email = response["email"] as? String ?? ""
        let displayName = response["displayName"] as? String ?? ""
        let isSocial = response["isSocial"] as? Bool ?? false
        let rewardImage = response["rewardImage"] as? String ?? nil
        
        return UserLogin.init(contactNo: contactNo, deviceToken: deviceToken, id: id, profileImg: profileImg, isOnline: isOnline, token: token, userName: userName, language: language, userBio: userBio, location: location, email: email, displayName: displayName, isSocial: isSocial, rewardImage: rewardImage)
    }
}

// MARK: - Location
class Location: Codable {
    let type: String
    let coordinates: [Double]
    
    init(type: String, coordinates: [Double]) {
        self.type = type
        self.coordinates = coordinates
    }
}



//struct UserLogin: CreatableFromJSON { // TODO: Rename this struct
//    let contactNo: String
//    let deviceToken: String
//    let displayName: String
//    let email: String
//    let id: String
//    let isOnline: Bool
//    let isSocial: Bool
//    let language: String
//    let location: Location
//    let profileImg: String
//    let token: String
//    let userBio: String
//    let userName: String
//    init(contactNo: String, deviceToken: String, displayName: String, email: String, id: String, isOnline: Bool, isSocial: Bool, language: String, location: Location, profileImg: String, token: String, userBio: String, userName: String) {
//        self.contactNo = contactNo
//        self.deviceToken = deviceToken
//        self.displayName = displayName
//        self.email = email
//        self.id = id
//        self.isOnline = isOnline
//        self.isSocial = isSocial
//        self.language = language
//        self.location = location
//        self.profileImg = profileImg
//        self.token = token
//        self.userBio = userBio
//        self.userName = userName
//    }
//    init?(json: [String: Any]) {
//        let contactNo = json["contact_no"] as? String ?? ""
//        let deviceToken = json["deviceToken"] as? String ?? ""
//        let displayName = json["displayName"] as? String ?? ""
//        let email = json["email"] as? String ?? ""
//        let id = json["_id"] as? String ?? ""
//        let isOnline = json["isOnline"] as? Bool ?? false
//        let isSocial = json["isSocial"] as? Bool ?? false
//        let language = json["language"] as? String ?? ""
//        let location = Location(json: json, key: "location") ?? Location.init(json: [:])
//        let profileImg = json["profile_img"] as? String ?? ""
//        let token = json["token"] as? String ?? ""
//        let userBio = json["userBio"] as? String ?? ""
//        let userName = json["user_name"] as? String ?? ""
//        self.init(contactNo: contactNo, deviceToken: deviceToken, displayName: displayName, email: email, id: id, isOnline: isOnline, isSocial: isSocial, language: language, location: location!, profileImg: profileImg, token: token, userBio: userBio, userName: userName)
//    }
//    struct Location: CreatableFromJSON { // TODO: Rename this struct
//        let coordinates: [Double]
//        let type: String
//        init(coordinates: [Double], type: String) {
//            self.coordinates = coordinates
//            self.type = type
//        }
//        init?(json: [String: Any]) {
//            let coordinates = (json["coordinates"] as? [NSNumber]).map({ $0.toDoubleArray() }) ?? []
//            let type = json["type"] as? String ?? ""
//            self.init(coordinates: coordinates, type: type)
//        }
//    }
//}
